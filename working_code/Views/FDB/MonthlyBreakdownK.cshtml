@using System.Data
@using MBTP.Controllers
@using MBTP.Retrieval
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@{
 DateTime startDate = (DateTime)ViewBag.FiscalYearStartDate;
 var yearName = startDate.ToString("yyyy");
    DateTime currentDate = DateTime.Now;
    int monthIndex = 0;

    decimal totalFood = 0;
    decimal totalKay = 0;
    decimal totalPed = 0;
    decimal totalMisc = 0;
    decimal totalTotal = 0;
    decimal totalCollected = 0;
    decimal totalRevenue = 0;
    decimal totalExpected = 0;
}
<div class='head-container'>
    <h1>Month-By-Month Information for Fiscal Year @yearName</h1>
    <p>&nbsp;</p>
    <a class="pdfButton" asp-area="" asp-controller="FDB" asp-action="Yearly">Back to yearly</a>
    <p>&nbsp;</p>
    <p>single click a specific month for its daily breakdown</p>
</div>

<body>
   @if (Model is not null && Model.Tables[0].Rows.Count > 0)
            {
<table id="monthly-table" class="breakdown clickable-tableK" style="width:240px">
    <tr>
        <th class="breakdownBigTitle" colspan="9">Kayak Shack</th>
    </tr>
    <tr>
        <th class="breakdownMonth" rowspan="2"><br><br>Month</th>
        <th class="breakdownTitle" colspan="1">317</th>
        <th class="breakdownTitle" colspan="1">352</th>
        <th class="breakdownTitle" colspan="1">354</th>
        <th class="breakdownTitle" rowspan="2">Misc Sales</th>
        <th class="breakdownTotalsHead" rowspan="2">Total Gross Revenue</th>
        <th class="breakdownTotalsHead" rowspan="2">Total Tax Collected</th>
        <th class="breakdownTotalsHead" rowspan="2">Total Net Revenue</th>
        <th class="breakdownTaxHead" rowspan="2">Total Tax Expected</th>
    </tr>
    <tr>
        <th class="breakdownTitle">Food Sales</th>
        <th class="breakdownTitle">Kayaks and Boards</th>
        <th class="breakdownTitle">Pedal Boats</th>
        
    </tr>
   @foreach (DataRow row in Model!.Tables[0].Rows)
    {
        var monthDate = startDate.AddMonths(monthIndex);
        var month = startDate.AddMonths(monthIndex).ToString("MMMM");
        var ThirP = 1.08m;
        var TenP = 1.105m;

        var noTaxFood = (decimal)row["NonTaxFoodK"];
        var PreparedFood = (decimal)row["PreparedFoodK"];
        var combinedFood = noTaxFood + PreparedFood;
        var KayBo= (decimal)row["KayAndBo"];
        var PedBo= (decimal)row["PedBo"];
        var Misc= (decimal)row["MiscK"];
        var total = ((PedBo+KayBo))+Misc+noTaxFood+PreparedFood;
        var taxCollected = (decimal)row["TaxK"];
        var netRevenue = ((PedBo+KayBo)/ThirP)+Misc+noTaxFood+(PreparedFood/TenP);
        var taxExpected = PedBo+KayBo-((PedBo+KayBo)/ThirP) + PreparedFood - (PreparedFood/TenP);

        totalFood += noTaxFood + PreparedFood;
        totalKay += KayBo;
        totalPed += PedBo;
        totalMisc += Misc;
        totalTotal += total;
        totalCollected += taxCollected;
        totalRevenue += netRevenue;
        totalExpected += taxExpected;
   <tr class="colorAlt" data-month="@monthDate.Month" data-year="@monthDate.Year">
        <td class="breakdownDate">@month</td>
        <td class="breakdownData">@combinedFood</td>
        <td class="breakdownData">@KayBo</td>
        <td class="breakdownData">@PedBo</td>
        <td class="breakdownData">@Misc</td>
        <td class="breakdownTotals">@total</td>
        <td class="breakdownTotals">@taxCollected</td>
        <td class="breakdownTotals">@netRevenue</td>
        <td class="breakdownTax">@taxExpected</td>
   </tr>
   monthIndex ++;
}
<tr>
        <td class="breakdownMonth">Totals:</td>
        <td class="breakdownTotals2">@totalFood</td>
        <td class="breakdownTotals2">@totalKay</td>
        <td class="breakdownTotals2">@totalPed</td>
        <td class="breakdownTotals2">@totalMisc</td>
        <td class="breakdownTotals2">@totalTotal</td>
        <td class="breakdownTotals2">@totalCollected</td>
        <td class="breakdownTotals2">@totalRevenue</td>
        <td class="breakdownTotals2">@totalExpected</td>
   </tr>
</table>}
</body>
<script>
$(document).ready(function () {
    $("#monthly-table").on("click", "tr", function () {
        var year = $(this).data("year");
        var month = $(this).data("month");
        var date = new Date(year, month - 1, 1); // JavaScript months are 0-based
        var url = `/FDB/DailyBreakdownK?date=${date.toISOString()}&whichMonth=None`;
        console.log('single-click detected on table row. URL:', url);
        if (url) {
            console.log('Navigating to:', url);
            window.location.href = url;
        } else {
            console.error('URL is undefined');
        }
    });
    var cells = document.querySelectorAll('tbody td.breakdownData, tbody td.breakdownTotals, tbody td.breakdownTax, tbody td.breakdownRef, tbody td.breakdownTotals2'); 
cells.forEach(function (cell) { 
    var amount = parseFloat(cell.textContent.replace(/[^0-9.-]+/g,"")); 
    if (!isNaN(amount)) { 
        if (amount == 0){
            cell.textContent = ' ';
        } else {
            if (amount < 0){
                cell.classList.add('negative-value');
                cell.textContent = '(' +  formatNumberWithCommas(Math.abs(amount).toFixed(2)) + ')';
            } else{
            cell.textContent = '$' + formatNumberWithCommas(amount.toFixed(2));
            }
        }
    } 
});
    function formatNumberWithCommas(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
});
</script>
